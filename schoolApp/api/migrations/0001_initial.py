# Generated by Django 4.1 on 2022-09-01 23:59

import api.models
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Course', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('access_code', models.CharField(max_length=15, unique=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Add_term', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('admission_no', models.CharField(default=api.models.generate_unique_code, max_length=15, primary_key=True, serialize=False)),
                ('Class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.class')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SS3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '11'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='SS2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '10'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Ss1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '9'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Primary_1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '1'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Primary5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '5'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Primary4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '4'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Primary3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '3'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Primary2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '2'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Jss3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '8'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Jss2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '7'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
        migrations.CreateModel(
            name='Jss1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', api.models.RangeIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student', models.ForeignKey(limit_choices_to={'Class': '6'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('term', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.term')),
            ],
            options={
                'unique_together': {('student', 'subject', 'term')},
            },
        ),
    ]
